<resources>
    <string name="app_name">HammerSystemTest</string>
    <string name="menu">Меню</string>
    <string name="profile">Профиль</string>
    <string name="cart">Корзина</string>
    <string name="bla_bla">View binding has important advantages over using findViewById: Null safety: Since view binding creates direct references to views, there\'s no risk of a null pointer exception due to an invalid view ID. Additionally, when a view is only present in some configurations of a layout, the field containing its reference in the binding class is marked with @Nullable. Type safety: The fields in each binding class have types matching the views they reference in the XML file. This means that there\'s no risk of a class cast exception. These differences mean that incompatibilities between your layout and your code will result in your build failing at compile time rather than at runtime.View binding has important advantages over using findViewById: Null safety: Since view binding creates direct references to views, there\'s no risk of a null pointer exception due to an invalid view ID. Additionally, when a view is only present in some configurations of a layout, the field containing its reference in the binding class is marked with @Nullable. Type safety: The fields in each binding class have types matching the views they reference in the XML file. This means that there\'s no risk of a class cast exception. These differences mean that incompatibilities between your layout and your code will result in your build failing at compile time rather than at runtime.View binding has important advantages over using findViewById: Null safety: Since view binding creates direct references to views, there\'s no risk of a null pointer exception due to an invalid view ID. Additionally, when a view is only present in some configurations of a layout, the field containing its reference in the binding class is marked with @Nullable. Type safety: The fields in each binding class have types matching the views they reference in the XML file. This means that there\'s no risk of a class cast exception. These differences mean that incompatibilities between your layout and your code will result in your build failing at compile time rather than at runtime.</string>
    <string name="pizza">Пицца</string>
    <string name="combo">Комбо</string>
    <string name="dessert">Десерты</string>
    <string name="snack">Закуски</string>
    <string name="drink">Напитки</string>
    <string name="sauce">Соусы</string>
</resources>